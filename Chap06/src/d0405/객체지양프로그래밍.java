package d0405;

public class 객체지양프로그래밍 {

	public static void main(String[] args) {
//		객체지향프로그래밍이란?
//		여러개의 독립된 단위. 즉, 객체들의 모임으로 설계하고자 하는것
//		각각의 객체는 [메세지를 주고 받고] 데이터를 처리
//					    (메소드)
//		유지보수에 유리함 ㅣ- 업그래이드 ㄱ  = 유지보수를 하는 도중에도
//					  ㄴ  기능 추가 ㅢ    [호환,규격] 이 알맞아야 한다
//									   (인터페이스)
	
//	============================
//		추상화(Abstract)
//		추상화는 클래스는 설계 - 설계가 로 생성된 것은 객체 (객체는 [독립적, 단독적] 이다) 
//			  [클래스는 설계 - 객체는 생성]
//		다형성(Polymorphism)
//		
//		상속(Inheritance)
//		추상적 일수록 상위클래스 구체적일수록 하위클래스
//		캡슐화(Encapsulation)
//		
//	=============================
	
//	
	
	}

}
